selenium is open source automation testing tool
used for testing web based applications
can work on multiple operating systems using selenium like windows,mac,linux and solaris

languages used with selenium : java,c#,php,perl,phython,ruby
supports cross browsers : IE,chrome,firefox,safari

selenium is a java jar file which we have to configure in our project

how to configure selenium in eclipse :
download java, set environmental variables, download eclipse(create java project,package,class)
download selenium jars and import those jars in eclipse project
RC on project->props->java build path->add external lib->add selenium jars and ok

selenium versions :
selenium 1.0 RC(Remote control) : selenese is language we write as a code.It goes into RC server then
it executes that javascript into application(JS is used to trigger events in the application)
we use selenese commands to automate the application
JS triggering the application is the major drawback in selenium RC(only uses java to trigger application)

selenium 2.0 webDriver
it doesnt has any server btwn webdriver and AUT
WD uses browser native lang  to trigger the AUT
ex: chrome built on java, IE built on c#
------------------------------------
webDriver(wd) is a interface.It has set of methods to automate application.All the methods present 
in wd are implemented by classes
ex:FireFoxDriver,ChromeDriver,InternetExplorerDriver,SafariDriver etc
------------------------------------
choose a browser which you want to automate ex: FireFoxDriver
create an object for that class and assign it to a name
sel=new FireFoxDriver();
make class obj ref to wedDriver which you want to implement

Webdriver sel=new FireFoxDriver(); // invokes firefox browser
--------------------------------
latest version is selenium 3.0
firefox less than 47 wont work with 3.0 but works with 2.5+ 
if we use firefox 48+ ok with 3.0 version then to open browser use this as supplement statement
use gecko driver(which has capability to invoke firefox browser in local machine) download it from google

System.setProperty("webdriver.gecko.driver","c://geckodriver.exe"); // path of gecko driver
Webdriver driver=new FireFoxDriver();
---------------------------------------------
to open url in browser use get()
driver.get("http://w3schools.com");

to get page title use getTitle()
s.o.p(driver.getTitle());

to get page source
s.o.p(driver.getPageSource());

s.o.p(driver.getCurrentUrl());

to close the browser use
driver.close();

----------------------------------------------------
wd cannot directly open chrome or IE browser
to open chrome or  IE browser we have to download chrome third party .exe file from selenium and copy that
file path in setProperty method
System.setProperty("webdriver.chrome.driver","c://programfiles//chrome.exe");

It is same for IE browser and have to disable protector mode present in tools option in IE browser
------------------------------------------------------------

to open safari we have to download and install one file which automatically helps wd to open safari

tools used in identifying html objects
firebug,firepath- firefox
chrome Inspector - google chrome
F12 - IE
---------------------------------------------------------
download and install firebug and firepath add-on
first firebug and then firepath

locator techniques to identify html objects :
Xpath,ID,Name,Class Name,linkText,CssSelector,Partial link text,tagName

how to find and click an element by using xpath
driver.findElement(By.Xpath("copy_xpath)).click();

to enter text in textbox use sendKeys method
driver.findElement(By.id("email")).sendKeys("rajeshbalne@gmail.com");
driver.findElement(By.name("paswd")).sendKeys("raja");

using tagName
string data=driver.findElement(By.tagName("select")).getText();

to click on link use linkText 
driver.findElement(By.linkText("forgot your password")).click();

if links data keeps on changing use partial link text
driver.findElement(By.partialLinkText("forgot your")).click();

firebug and firepath works only for firefox browser
for chrome RC and click on inspect element
for IE , click F12
--------------------------------------------------------------------
for customize Xpath
syntax : //tagname[@attribute='value']
ex: //input[@name='email']
ex: //*[@name='email'] here * means any tagname in general way of declaration

very rare scenario : traversing xpath( just like subclasses)
//div[@name='email']/div[1]/div[1]/div/input

-----------------------------------------------------------
CssSelector locator syntax :
tagname[attribute='value']
div[name='email']
[name='email'] // in general

driver.findElement(By.CssSelector("input[name='email')).sendKeys("rajesh@gmail.com");
or CssSelector("#Login") // short form of id attribute

----------------------------------------------------------------
Handling dynamic dropdown :
you have to select the unique attribute though the object changes in the webpage
driver.findElement(By.Xpath("//input[@name='source'])).click();
driver.findElement(By.Xpath("//a[@value='goa'])).click();

Handling static dropdown if they have select tag : use select class
select dd=new select(driver.findElement(By.Xpath("//*[@id='car']);
dd.selectByIndex(3);
dd.selectByVisibleText("audi");
dd.selectByValue("5");

-------------------------------------------------------------
Handle check boxes : methods used(isSelected(),click() )
driver.findElement(By.Xpath("//*[@id='adult'])).click(); // click that checkbox
s.o.p(driver.findElement(By.Xpath("//*[@id='adult'])).isSelected()); // returns true

-------------------------------------------------------------------
Handle radio buttons :
driver.findElement(By.Xpath("//input[@value='milk'])).click();

*to count no of radio buttons use size() and findElements
driver.findElements(By.Xpath("//input[@name='group1'])).size();

*to handle radio buttons dynamically without knowing value name
int count=driver.findElements(By.Xpath("//input[@name='group1'])).size();
for(int i=0;i<count;i++)
{
driver.findElements(By.Xpath("//input[@name='group1'])).get(i).click(); // clicks all elements in group
s.o.p(driver.findElements(By.Xpath("//input[@name='group1'])).get(2).getAttribute("value")); // 
}

*to find milk and click on that radio button
for(int i=0;i<count;i++)
{
string text=driver.findElements(By.Xpath("//input[@name='group1'])).get(i).getAttribute("value");
if(text.equals("milk"))
{
driver.findElements(By.Xpath("//input[@name='group1'])).get(i).click();
}
}
---------------------------------------------------------------
alert class can be used only to select object in popup which is java related
we need to switch from webdriver to alert to click that element

webdriver.switchTo().alert().accept();
webdriver.switchTo().alert().dismiss();
webdriver.switchTo().alert.sendKeys("rajesh");
--------------------------------------------------------------------

isDisplayed() is used when element is present in source code but not present in the webpage or not
s.o.p(driver.findElement(By.Xpath("//*[@name='arrival'])).isDisplayed());

--------------------------------------------------------------

to check element is present in webpage or not use size() and compare
int count=driver.findElement(By.Xpath("//*[@value="mango"])).size();
if(count==0)
{
s.o.p("element not present");
}

------------------------------------------------------------------
to check whether element is enabled or disabled
s.o.p(driver.findElement(By.Xpath("//*[name='email'])).isEnabled);
------------------------------------------------------------
if you want to pass the script for few seconds use
Thread.sleep(3000); // 3 seconds
------------------------------------------------------------------
if you want to get text from object of wepage use getText
string text=driver.findElement(By.xpath("//*[@id='87'])).getText();
-------------------------------------------------------------------
to click adults five times in ticket booking site
int i=0;
while(i<5)
{
driver.findElement(By.Xpath("//*[@name='adult'])).click();
i++;
}
-------------------------------------------------------------------------------------------------------





